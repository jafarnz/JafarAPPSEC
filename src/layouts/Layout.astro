---
export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="description"
            content="CCA Portal - Application Security Project"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
            rel="stylesheet"
        />
        <title>{title}</title>
    </head>
    <body
        class="min-h-screen bg-gradient-to-br from-slate-50 via-rose-50 to-red-100 font-inter"
    >
        <slot />

        <!-- Toast Container -->
        <div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2">
        </div>

        <script>
            // @ts-nocheck
            // Toast functionality
            window.showToast = function (message, type = "success") {
                const toastContainer =
                    document.getElementById("toast-container");
                const toast = document.createElement("div");

                const bgColor =
                    type === "success"
                        ? "bg-green-500"
                        : type === "error"
                          ? "bg-red-600"
                          : "bg-rose-500";

                toast.className = `${bgColor} text-white px-6 py-3 rounded-lg shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out flex items-center space-x-2 max-w-sm`;

                const icon =
                    type === "success" ? "✓" : type === "error" ? "✗" : "ℹ";

                toast.innerHTML = `
					<span class="text-lg font-semibold">${icon}</span>
					<span class="text-sm font-medium">${message}</span>
					<button onclick="this.parentElement.remove()" class="ml-auto text-white hover:text-gray-200 font-bold text-lg">&times;</button>
				`;

                toastContainer.appendChild(toast);

                // Animate in
                setTimeout(() => {
                    toast.classList.remove("translate-x-full");
                }, 100);

                // Auto remove after 5 seconds
                setTimeout(() => {
                    toast.classList.add("translate-x-full");
                    setTimeout(() => {
                        if (toast.parentElement) {
                            toast.remove();
                        }
                    }, 300);
                }, 5000);
            };
        </script>
    </body>
</html>

<style is:global>
    .font-inter {
        font-family:
            "Inter",
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            sans-serif;
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f5f9;
    }

    ::-webkit-scrollbar-thumb {
        background: #cbd5e1;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: #94a3b8;
    }

    /* Form focus styles */
    input:focus,
    select:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(244, 63, 94, 0.12); /* rose-500 */
    }

    /* Button hover effects */
    .btn-primary {
        background: linear-gradient(135deg, #ef4444 0%, #b91c1c 100%);
        transition: all 0.2s ease;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        transform: translateY(-1px);
        box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
    }

    .btn-danger {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        transition: all 0.2s ease;
    }

    .btn-danger:hover {
        background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
        transform: translateY(-1px);
        box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
    }

    /* Card hover effects */
    .card {
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    /* Animate page transitions */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out;
    }

    /* Loading spinner */
    .spinner {
        border: 2px solid #f3f4f6;
        border-top: 2px solid #ef4444; /* red-500 */
        border-radius: 50%;
        width: 20px;
        height: 20px;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
</style>
